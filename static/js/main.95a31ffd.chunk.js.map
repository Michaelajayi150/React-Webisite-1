{"version":3,"sources":["logo.svg","components/todo.js","components/sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","input","handleSubmit","handleChange","inputElement","handleDelete","useState","id","value","edit","setEdit","type","className","ref","onChange","onClick","map","item","Sidebar","App","setInput","useRef","Task","todoLeft","filter","c","e","preventDefault","todo","test","newTodo","addTodo","length","current","focus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,I,YCkFAA,MAhFf,YAMI,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,aACAC,EACC,EADDA,aAEA,EAAwBC,mBAAS,CAAEC,GAAI,KAAMC,MAAO,KAApD,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OAAID,EAAKF,GAEL,+BACGE,EACC,qCACE,uBACEE,KAAK,OACLC,UAAU,QACVC,IAAKT,EACLU,SAAUX,IAEZ,wBAAQQ,KAAK,SAASI,QAASb,EAA/B,uBAKF,qCACE,uBACES,KAAK,OACLC,UAAU,QACVC,IAAKT,EACLU,SAAUX,IAEZ,wBAAQQ,KAAK,SAASI,QAASb,EAA/B,2BAUR,sBAAKU,UAAU,iBAAf,UACE,4DACA,iCACE,uBACED,KAAK,OACLC,UAAU,aACVC,IAAKT,EACLU,SAAUX,IAEZ,wBAAQQ,KAAK,SAASC,UAAU,WAAWG,QAASb,EAApD,yBAIDD,EAAMe,KAAI,SAACC,GACV,OACE,sBAAKL,UAAU,YAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6BK,EAAKT,QAClC,sBAAKI,UAAU,gBAAf,UACE,wBACEA,UAAU,kBACVG,QAAS,kBAAML,EAAQ,CAAEH,GAAIU,EAAKV,GAAIC,MAAOS,EAAKT,SAFpD,kBAMA,wBACEI,UAAU,iBACVG,QAAS,kBAAMV,EAAaY,IAF9B,iCCrDCC,MAbf,WACI,MAAwBZ,oBAAS,GAAjC,mBAGA,OAHA,UAII,8BACI,2BCwCGa,MA1Cf,WACI,MAA0Bb,mBAAS,IAAnC,mBAAOL,EAAP,KAAcmB,EAAd,KAEMhB,EAAeiB,mBA+BvB,OACI,qCACE,cAAC,EAAD,CAAMpB,MAAOA,EAAOI,aATH,SAAAiB,GACjB,IAAMC,EAAWtB,EAAMuB,QAAO,SAAAC,GAAC,OAAIA,EAAElB,IAAMe,EAAKf,MAEhDa,EAASG,IAMuCrB,aAtB/B,SAACwB,GAClBA,EAAEC,iBAVU,SAACC,GACb,GAAKA,EAAKpB,QAAS,QAAQqB,KAAKD,EAAKpB,OAArC,CAIA,IAAMsB,EAAO,sBAAO7B,GAAP,CAAc2B,IAC3BR,EAASU,IAKTC,CAAQ,CACJxB,GAAIN,EAAM+B,OAAS,EACnBxB,MAAOJ,EAAa6B,QAAQzB,QAEhCJ,EAAa6B,QAAQC,SAgBuD/B,aAb3D,SAACuB,KAasFtB,aAAcA,IACtH,cAAC,EAAD,QC/BO+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95a31ffd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\n\r\nfunction Todo({\r\n  input,\r\n  handleSubmit,\r\n  handleChange,\r\n  inputElement,\r\n  handleDelete,\r\n}) {\r\n  const [edit, setEdit] = useState({ id: null, value: \"\" });\r\n\r\n  if (edit.id) {\r\n    return (\r\n      <form>\r\n        {edit ? (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input\"\r\n              ref={inputElement}\r\n              onChange={handleChange}\r\n            />\r\n            <button type=\"submit\" onClick={handleSubmit}>\r\n              Update\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input\"\r\n              ref={inputElement}\r\n              onChange={handleChange}\r\n            />\r\n            <button type=\"submit\" onClick={handleSubmit}>\r\n              Add Todo\r\n            </button>\r\n          </>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <h1>What's Your Plan For Today</h1>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          className=\"todo-input\"\r\n          ref={inputElement}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"todo-btn\" onClick={handleSubmit}>\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n      {input.map((item) => {\r\n        return (\r\n          <div className=\"todo-list\">\r\n            <span className=\"todo-item\">{item.value}</span>\r\n            <div className=\"todo-item-btn\">\r\n              <button\r\n                className=\"btn btn-success\"\r\n                onClick={() => setEdit({ id: item.id, value: item.value })}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDelete(item)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\n\r\nfunction Sidebar() {\r\n    const [menu, setMenu] = useState(false)\r\n\r\n    const showMenu = () => setMenu(!menu);\r\n    return (  \r\n        <div>\r\n            <nav>\r\n                \r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import logo from './logo.svg';\nimport './App.css';\nimport Todo from './components/todo';\nimport { useRef, useState } from 'react';\nimport Sidebar from './components/sidebar';\n\nfunction App() {\n    const [input, setInput] = useState([])\n    \n    const inputElement = useRef();\n\n    const addTodo = (todo) => {\n        if (!todo.value || /^\\s*$/.test(todo.value)) {\n            return;\n        }\n\n        const newTodo = [...input, todo]\n        setInput(newTodo);\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        addTodo({\n            id: input.length + 1,\n            value: inputElement.current.value\n        })\n        inputElement.current.focus();\n    }\n    \n    const handleChange = (e) => {\n\n    }\n\n    const handleDelete = Task => {\n        const todoLeft = input.filter(c => c.id != Task.id)\n\n        setInput(todoLeft);\n    }\n\n\n  return (\n      <>\n        <Todo input={input} handleDelete={handleDelete} handleSubmit={handleSubmit} handleChange={handleChange} inputElement={inputElement} />\n        <Sidebar />\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}